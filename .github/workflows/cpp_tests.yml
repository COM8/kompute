name: C++ Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  windows_vulkan_version: "1.3.204.0"
  windows_vulkan_sdk: "$GITHUB_WORKSPACE/../vulkan_sdk/"

jobs:
  ubuntu-debug-with-debug-layers:
    runs-on: ubuntu-latest
    container: axsauze/kompute-builder:0.3
    steps:
    - name: Install vulkaninfo
      run: apt update -y && apt install -y vulkan-tools
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: false
    - name: "[Release g++] Build & Test"
      env:
        VK_ICD_FILENAMES: "/swiftshader/vk_swiftshader_icd.json"
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{github.workspace}}/build
        source-dir: ${{github.workspace}}
        cc: gcc
        cxx: g++
        build-type: Debug
        run-test: true
        ctest-options: -V
        configure-options: -DKOMPUTE_OPT_BUILD_TESTS=ON -DKOMPUTE_OPT_DISABLE_VK_DEBUG_LAYERS=OFF -DKOMPUTE_OPT_DISABLE_VULKAN_VERSION_CHECK=ON
  
  ubuntu-release-with-debug-layers:
    runs-on: ubuntu-latest
    container: axsauze/kompute-builder:0.3
    steps:
    - name: Install vulkaninfo
      run: apt update -y && apt install -y vulkan-tools
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: false
    - name: "[Release g++] Build & Test"
      env:
        VK_ICD_FILENAMES: "/swiftshader/vk_swiftshader_icd.json"
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{github.workspace}}/build
        source-dir: ${{github.workspace}}
        cc: gcc
        cxx: g++
        build-type: Release
        run-test: true
        ctest-options: -V
        configure-options: -DKOMPUTE_OPT_BUILD_TESTS=ON -DKOMPUTE_OPT_DISABLE_VK_DEBUG_LAYERS=OFF -DKOMPUTE_OPT_DISABLE_VULKAN_VERSION_CHECK=ON

  ubuntu-debug-without-debug-layers:
    runs-on: ubuntu-latest
    container: axsauze/kompute-builder:0.3
    steps:
    - name: Install vulkaninfo
      run: apt update -y && apt install -y vulkan-tools
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: false
    - name: "[Release g++] Build & Test"
      env:
        VK_ICD_FILENAMES: "/swiftshader/vk_swiftshader_icd.json"
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{github.workspace}}/build
        source-dir: ${{github.workspace}}
        cc: gcc
        cxx: g++
        build-type: Debug
        run-test: true
        ctest-options: -V
        configure-options: -DKOMPUTE_OPT_BUILD_TESTS=ON -DKOMPUTE_OPT_DISABLE_VK_DEBUG_LAYERS=ON -DKOMPUTE_OPT_DISABLE_VULKAN_VERSION_CHECK=ON
  
  ubuntu-release-without-debug-layers:
    runs-on: ubuntu-latest
    container: axsauze/kompute-builder:0.3
    steps:
    - name: Install vulkaninfo
      run: apt update -y && apt install -y vulkan-tools
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: false
    - name: "[Release g++] Build & Test"
      env:
        VK_ICD_FILENAMES: "/swiftshader/vk_swiftshader_icd.json"
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{github.workspace}}/build
        source-dir: ${{github.workspace}}
        cc: gcc
        cxx: g++
        build-type: Release
        run-test: true
        ctest-options: -V
        configure-options: -DKOMPUTE_OPT_BUILD_TESTS=ON -DKOMPUTE_OPT_DISABLE_VK_DEBUG_LAYERS=ON -DKOMPUTE_OPT_DISABLE_VULKAN_VERSION_CHECK=ON

  windows-release-without-debug-layers:
    runs-on: windows-latest
    steps:
    - name: Install Vulkan SDK
      shell: pwsh
      run: |
        curl -LS -o vulkansdk.exe `
          https://sdk.lunarg.com/sdk/download/${{ env.windows_vulkan_version }}/windows/VulkanSDK-${{ env.windows_vulkan_version }}-Installer.exe
        7z x vulkansdk.exe -o"${{ env.windows_vulkan_sdk }}"
    - name: Test Vulkan SDK
      shell: powershell
      run: |
        $ENV:PATH="$ENV:PATH;$ENV:VULKAN_SDK/bin"
        echo "Vulkan SDK Version=='$env:VULKAN_SDK_VERSION'"
        if (!$env:VULKAN_SDK_VERSION) { throw "Vulkan SDK install error" }
        TREE . /F
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: false
    - name: "[Release g++] Build & Test"
      env:
        VK_ICD_FILENAMES: "/swiftshader/vk_swiftshader_icd.json"
        VULKAN_SDK: "${{ env.windows_vulkan_sdk }}"
      uses: ashutoshvarma/action-cmake-build@master
      with:
        build-dir: ${{github.workspace}}/build
        source-dir: ${{github.workspace}}
        cc: gcc
        cxx: g++
        build-type: Release
        run-test: true
        ctest-options: -V
        configure-options: -DKOMPUTE_OPT_BUILD_TESTS=ON -DKOMPUTE_OPT_DISABLE_VK_DEBUG_LAYERS=ON -DKOMPUTE_OPT_DISABLE_VULKAN_VERSION_CHECK=ON
